version: '3.8'

services:
  redis:
    image: redis
    restart: always

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: 'books_db'
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'qweqweqweqwe'
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: always

  rs_api:
    ports:
      - "8000:8000"
    env_file: .env.dc
    environment:
      - REDIS_LOCATION=redis://redis:6379/1
    volumes:
      - ./src:$PROJECT_DIR
      - static_volume:$PROJECT_DIR/static
      - media_volume:$PROJECT_DIR/media
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             python manage.py create_admin &&
             python manage.py fill_books &&
             python manage.py fill_users &&
             gunicorn api.wsgi:application -b 0.0.0.0:8000"
    build:
      context: .
      dockerfile: ./src/api/docker/Dockerfile
      args:
        PROJECT_DIR: ${PROJECT_DIR}
    restart: always
    depends_on:
      - db

  celery-beats:
    env_file: .env.dc
    build:
      context: .
      dockerfile: ./src/api/docker/Dockerfile
      args:
        PROJECT_DIR: ${PROJECT_DIR}
    restart: always
    command: celery -A api beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  worker:
    env_file: .env.dc
    build:
      context: .
      dockerfile: ./src/api/docker/Dockerfile
      args:
        PROJECT_DIR: ${PROJECT_DIR}
    restart: always
    command: celery -A api worker --loglevel=INFO
    depends_on:
      - db

  nginx:
    restart: always
    build:
      dockerfile: ./Dockerfile
      context: ./src/api/docker/nginx/
    environment:
      - PROJECT_DIR=${PROJECT_DIR}
    container_name: rs_api_nginx
    image: rs_api_nginx
    volumes:
      - static_volume:$PROJECT_DIR/static
      - media_volume:$PROJECT_DIR/media
    depends_on:
      - rs_api
    ports:
      - "80:80"

volumes:
  static_volume:
  media_volume:
  pg_data:
